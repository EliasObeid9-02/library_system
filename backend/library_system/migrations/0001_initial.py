# Generated by Django 4.2.11 on 2024-04-27 15:04

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import django.db.models.functions.text
import library_system.validators
import uuid


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Author',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('first_name', models.CharField(max_length=40, validators=[library_system.validators.NameValidator()])),
                ('last_name', models.CharField(max_length=40, validators=[library_system.validators.NameValidator()])),
            ],
        ),
        migrations.CreateModel(
            name='Book',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('isbn', models.CharField(max_length=13, unique=True, validators=[library_system.validators.ISBNValidator], verbose_name='ISBN')),
                ('title', models.CharField(max_length=100)),
                ('summary', models.TextField()),
                ('pages', models.IntegerField()),
                ('edition', models.IntegerField()),
                ('language', models.CharField(choices=[('en', 'English'), ('zh', 'Chinese'), ('de', 'German'), ('es', 'Spanish'), ('ja', 'Japanese'), ('ru', 'Russian'), ('ar', 'Arabic')], default='en', max_length=2)),
            ],
            options={
                'ordering': ['title', 'pages'],
            },
        ),
        migrations.CreateModel(
            name='BookInstance',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, primary_key=True, serialize=False)),
                ('due_date', models.DateField(blank=True, null=True)),
                ('status', models.CharField(blank=True, choices=[('M', 'Maintenance'), ('B', 'Borrowed'), ('R', 'Reserved'), ('A', 'Available')], default='M', max_length=1)),
            ],
        ),
        migrations.CreateModel(
            name='Category',
            fields=[
                ('name', models.CharField(max_length=40, primary_key=True, serialize=False, validators=[library_system.validators.NameValidator()])),
            ],
        ),
        migrations.CreateModel(
            name='Publication',
            fields=[
                ('name', models.CharField(max_length=40, primary_key=True, serialize=False)),
            ],
        ),
        migrations.AddConstraint(
            model_name='publication',
            constraint=models.UniqueConstraint(django.db.models.functions.text.Lower('name'), name='unique_publication_name'),
        ),
        migrations.AddConstraint(
            model_name='category',
            constraint=models.UniqueConstraint(django.db.models.functions.text.Lower('name'), name='unique_category_name'),
        ),
        migrations.AddField(
            model_name='bookinstance',
            name='book',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='library_system.book'),
        ),
        migrations.AddField(
            model_name='bookinstance',
            name='borrower',
            field=models.ForeignKey(on_delete=django.db.models.deletion.RESTRICT, to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='book',
            name='authors',
            field=models.ManyToManyField(related_name='books', to='library_system.author'),
        ),
        migrations.AddField(
            model_name='book',
            name='categories',
            field=models.ManyToManyField(related_name='books', to='library_system.category'),
        ),
        migrations.AddField(
            model_name='book',
            name='publication',
            field=models.ForeignKey(on_delete=django.db.models.deletion.RESTRICT, related_name='books', to='library_system.publication'),
        ),
        migrations.AddConstraint(
            model_name='author',
            constraint=models.UniqueConstraint(django.db.models.functions.text.Lower('first_name'), django.db.models.functions.text.Lower('last_name'), name='unique_author_name'),
        ),
    ]
